{"version":3,"sources":["utils/withTable.js","utils/contants.js","utils/util.js","utils/table.js","components/ToolBar.jsx","components/TableEditor.jsx","pages/App.jsx","utils/parseRawInputByMarkdownIt.js","locales/i18n.js","index.js","utils/testExample.js"],"names":["withTable","editor","deleteBackward","deleteForward","insertBreak","unit","selection","Editor","nodes","match","n","isEditor","Element","isElement","type","cell","prevNodePath","before","at","tableNode","cellPath","start","Point","equals","anchor","Range","isCollapsed","after","end","DEFAULT_TABLE","tableLineReg","stringToSlateValue","str","_arr","trim","split","filter","Boolean","map","_str","replaceAll","contentArr","concat","slice","res","rowStr","rowArr","length","createTableNode","createTableCell","text","children","cellText","tableChildren","Array","from","value","createRow","TableUtil","insertTable","rows","columns","mode","newTable","Transforms","insertNodes","insertCells","path","action","cursorPosition","row","column","existingText","arr","newSelection","splice","fill","_path","focus","item","_row","console","error","removeTable","select","removeNodes","edit","oldTable","test","moveCursor","rowsCount","columnsCount","transformSelect","get","join","cursor","offset","this","ToolBar","t","useTranslation","useSlate","table","handleButtonClick","e","preventDefault","className","title","arrowPointAtCenter","placement","InsertRowAboveOutlined","onMouseDown","InsertRowBelowOutlined","DeleteRowOutlined","InsertRowLeftOutlined","InsertRowRightOutlined","DeleteColumnOutlined","props","attributes","element","TableEditor","ref","content","useState","setValue","useMemo","withTables","withReact","createEditor","tableUtil","renderElement","useCallback","useImperativeHandle","getEditorValue","onKeydown","code","ReactEditor","isFocused","onChange","placeholder","onKeyDown","event","key","shiftKey","insertText","forwardRef","logseq","window","logseqApp","App","logseqEditor","isInBrowser","process","REACT_APP_ENV","genTable","startLine","endLine","splitStrByTable","tables","strToArr","strArrByTable","forEach","index","preEndLine","push","lastTableEndLine","blockId","tableEditorMapRef","useRef","arrAfterSplitByTable","setArrAfterSplitByTable","onClickCancel","hideMainUI","Object","keys","current","useEffect","log","addEventListener","removeEventListener","style","background","zIndex","onClick","maxHeight","node","dom","setTableEditorRef","whiteSpace","ghost","icon","PlusOutlined","find","UI","showMsg","markdownContent","slateVal","rowStrs","cells","slateValueToString","updateBlock","then","catch","err","md","MarkdownIt","parseMarkdownTable","input","strArr","parse","token","endLineStr","trueEndLine","warn","resources","en","translation","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","bootEditor","ReactDOM","render","StrictMode","document","getElementById","showMainUI","renderApp","ready","getUserConfigs","configs","changeLanguage","preferredLanguage","provideStyle","commandCallback","getBlock","uuid","block","format","registerBlockContextMenuItem","registerSlashCommand","on","visible","unmountComponentAtNode"],"mappings":"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","file":"static/js/main.887518bb.chunk.js","sourcesContent":["import { Editor, Range, Point, Element } from 'slate'\n\nconst withTable = (editor) => {\n  const { deleteBackward, deleteForward, insertBreak } = editor\n\n  editor.deleteBackward = unit => {\n    const { selection } = editor;\n    if (selection) {\n      const [cell] = Editor.nodes(editor, {\n        match: n =>\n          !Editor.isEditor(n) &&\n          Element.isElement(n) &&\n          n.type === 'table-cell',\n      })\n      const prevNodePath = Editor.before(editor, selection)\n\n      const [tableNode] = Editor.nodes(editor, {\n        at: prevNodePath,\n        match: n => !Editor.isEditor(n) && Element.isElement && n.type === 'table-cell'\n      })\n\n      if (cell) {\n        const [, cellPath] = cell\n\n        const start = Editor.start(editor, cellPath)\n        if (Point.equals(selection.anchor, start)) {\n          return\n        }\n      }\n      if (!cell && tableNode) {\n        return\n      }\n    }\n\n    deleteBackward(unit)\n  }\n  editor.deleteForward = unit => {\n    const { selection } = editor\n    if (selection && Range.isCollapsed(selection)) {\n      const [cell] = Editor.nodes(editor, {\n        match: n =>\n          !Editor.isEditor(n) &&\n          Element.isElement(n) &&\n          n.type === 'table-cell',\n      })\n\n      const prevNodePath = Editor.after(editor, selection)\n      const [tableNode] = Editor.nodes(editor, {\n        at: prevNodePath,\n        match: n => !Editor.isEditor(n) && Element.isElement && n.type === 'table-cell'\n      })\n\n\n      if (cell) {\n        const [, cellPath] = cell\n        const end = Editor.end(editor, cellPath)\n\n        if (Point.equals(selection.anchor, end)) {\n          return\n        }\n      }\n      if (!cell && tableNode) {\n        return\n      }\n    }\n\n    deleteForward(unit)\n  }\n\n  editor.insertBreak = () => {\n    const { selection } = editor\n    if (selection) {\n      const [table] = Editor.nodes(editor, {\n        match: n =>\n          !Editor.isEditor(n) &&\n          Element.isElement(n) &&\n          n.type === 'table',\n      })\n\n      if (table) {\n        return\n      }\n    }\n\n    insertBreak()\n  }\n  return editor;\n}\n\n\nexport default withTable;","export const DEFAULT_TABLE = '|||\\n|--|--|\\n|||'\n\nexport const tableLineReg = /^\\|.+\\|$/","import { DEFAULT_TABLE } from './contants'\n\nexport const stringToSlateValue = (str = '') => {\n  str = str || DEFAULT_TABLE\n  // 将 [:br] 转为换行符\n  const _arr = str.trim().split('\\n').filter(Boolean).map(_str => _str.replaceAll('[:br]', '\\n'))\n  const contentArr = [_arr[0]].concat(_arr.slice(2))\n  const res = contentArr.map(rowStr => {\n    const rowArr = rowStr.trim().split('|')\n    return rowArr.slice(1, rowArr.length - 1)\n  })\n  return createTableNode(res)\n}\n\nexport const slateValueToString = (slateVal) => {\n  let rowStrs = Array.from(slateVal.children, (row) => {\n    const cells = Array.from(row.children, (cell) => {\n      // 将换行符替换为 [:br]\n      return cell.children[0].text?.replaceAll('\\n', '[:br]')\n    }).join('|')\n    return `|${cells}|`\n  })\n  rowStrs.splice(1, 0, `|${Array.from(slateVal.children[0].children, () => '--').join('|')}|`)\n  return rowStrs.join('\\n')\n}\n\nconst createRow = (cellText) => {\n  const newRow = Array.from(cellText, (value) => createTableCell(value))\n  return {\n    type: \"table-row\",\n    children: newRow\n  }\n}\n\nconst createTableCell = (text) => {\n  return {\n    type: \"table-cell\",\n    children: [{ text }]\n  }\n}\n\nexport const createTableNode = (cellText) => {\n  const tableChildren = Array.from(cellText, (value) => createRow(value))\n  let tableNode = { type: \"table\", children: tableChildren }\n  return tableNode\n}","import { Transforms, Editor, Range, Element } from \"slate\"\nimport { createTableNode } from \"./util\"\nimport { get } from 'lodash'\n\nexport class TableUtil {\n  constructor(editor) {\n    this.editor = editor;\n  }\n\n  insertTable = (rows, columns) => {\n    const [tableNode] = Editor.nodes(this.editor, {\n      match: (n) =>\n        !Editor.isEditor(n) && Element.isElement(n) && n.type === \"table\",\n      mode: \"highest\"\n    });\n\n    if (tableNode) return;\n    if (!rows || !columns) {\n      return;\n    }\n    const cellText = Array.from({ length: rows }, () =>\n      Array.from({ length: columns }, () => \"\")\n    );\n    const newTable = createTableNode(cellText);\n\n    Transforms.insertNodes(this.editor, newTable, {\n      mode: \"highest\"\n    });\n    Transforms.insertNodes(\n      this.editor,\n      { type: \"paragraph\", children: [{ text: \"\" }] },\n      { mode: \"highest\" }\n    );\n  };\n\n  insertCells = (tableNode, path, selection, action) => {\n    const { anchor } = selection\n    const cursorPosition = { row: anchor?.path[1], column: anchor?.path[2] }\n\n    let existingText = Array.from(tableNode.children, (rows) =>\n      Array.from(rows.children, (arr) => arr.children[0].text)\n    );\n    const columns = existingText[0].length;\n    let newSelection = {...selection}\n\n    if (action === 'insert-row-above') {\n      existingText.splice(cursorPosition.row, 0, Array(columns).fill(''))\n      let _path = [...anchor.path]\n      _path.splice(1, 1, cursorPosition.row + 1)\n      newSelection = {\n        anchor: {\n          ...newSelection.anchor,\n          path: _path,\n        },\n        focus: {\n          ...newSelection.focus,\n          path: _path,\n        }\n      }\n    } else if (action === 'insert-row-below') {\n      existingText.splice(cursorPosition.row + 1, 0, Array(columns).fill(''))\n    } else if (action === 'insert-column-above') {\n      existingText = Array.from(existingText, (item) => {\n        let _row = [...item]\n        _row.splice(cursorPosition.column, 0, '')\n        return _row\n      })\n      let _path = [...anchor.path]\n      _path.splice(2, 1, cursorPosition.column + 1)\n      newSelection = {\n        anchor: {\n          ...newSelection.anchor,\n          path: _path,\n        },\n        focus: {\n          ...newSelection.focus,\n          path: _path,\n        }\n      }\n    } else if (action === 'insert-column-below') {\n      existingText = Array.from(existingText, (item) => {\n        let _row = [...item]\n        _row.splice(cursorPosition.column + 1, 0, '')\n        return _row\n      })\n    } else if (action === 'delete-row' && existingText?.length > 1) {\n      existingText.splice(cursorPosition.row, 1)\n    } else if (action === 'delete-column' && columns > 1 ) {\n      existingText = Array.from(existingText, (item) => {\n        let _row = [...item]\n        _row.splice(cursorPosition.column, 1)\n        return _row\n      })\n    } else {\n      return console.error('[insert cells run error]: unsupport action or can not delete', action, columns)\n    }\n\n    this.removeTable()\n    const newTable = createTableNode(existingText);\n    Transforms.insertNodes(this.editor, newTable, {\n      at: path\n    });\n    if (action !== 'delete-row' && action !== 'delete-column') {\n      // keep cursor position\n      Transforms.select(this.editor, newSelection)\n    }\n  };\n\n  removeTable = () => {\n    Transforms.removeNodes(this.editor, {\n      match: (n) =>\n        !Editor.isEditor(n) && Element.isElement(n) && n.type === \"table\",\n      mode: \"highest\"\n    });\n  };\n\n  /**\n   * insert or delete\n   * @param {string} action 'insert-row-above' | 'insert-row-below' | 'insert-row-above' | 'insert-row-below' | 'delete-row' | 'delete-column'\n   */\n  edit = (action = 'insert-row-below') => {\n    const { selection } = this.editor;\n    if (!!selection && Range.isCollapsed(selection)) {\n      const [tableNode] = Editor.nodes(this.editor, {\n        match: (n) =>\n          !Editor.isEditor(n) && Element.isElement(n) && n.type === \"table\"\n      });\n      if (tableNode) {\n        const [oldTable, path] = tableNode;\n        if (/^cursor-\\w+/.test(action)) {\n          this.moveCursor(oldTable, selection, action)\n        } else {\n          this.insertCells(oldTable, path, selection, action);\n        }\n      }\n    }\n  };\n\n  moveCursor = (tableNode, selection, action = 'cursor-next') => {\n    const { focus } = selection\n    const cursorPosition = { row: focus?.path[1], column: focus?.path[2] }\n\n    // console.log('[faiz:] === tableNode', tableNode)\n    const rowsCount = tableNode.children.length\n    const columnsCount = tableNode.children[0].children.length\n    // console.log('[faiz:] === current cursor state', cursorPosition, rowsCount, columnsCount)\n\n    function transformSelect(editor, _path) {\n      const text = get(tableNode.children, _path.slice(1, 3).map(item => `[${item}].children`).concat(`[${_path[3]}].text`).join(''))\n      const cursor = {\n        path: _path,\n        offset: text.length,\n      }\n      Transforms.select(editor, { anchor: cursor, focus: cursor })\n    }\n\n    if (action === 'cursor-next') {\n      let path = [...focus.path]\n      if (cursorPosition.column < columnsCount - 1) {\n        // 横向移动到下一个\n        path = [0, cursorPosition.row, cursorPosition.column + 1, 0]\n      } else if (cursorPosition.row < rowsCount - 1) {\n        // 处于当前行最后一个, 光标移动到下一行第一个\n        path = [0, cursorPosition.row + 1, 0, 0]\n      }\n      transformSelect(this.editor, path)\n    } else if (action === 'cursor-prev') {\n      let path = [...focus.path]\n      if (cursorPosition.column > 0) {\n        // 横向移动到上一个\n        path = [0, cursorPosition.row, cursorPosition.column - 1, 0]\n      } else if (cursorPosition.row > 0) {\n        // 处于当前行第一个, 光标移动到上一行最后一个\n        path = [0, cursorPosition.row - 1, columnsCount - 1, 0]\n      }\n      transformSelect(this.editor, path)\n    }\n\n  }\n\n}\n","import { useSlate } from 'slate-react'\nimport { InsertRowAboveOutlined, InsertRowBelowOutlined, InsertRowLeftOutlined, InsertRowRightOutlined, DeleteRowOutlined, DeleteColumnOutlined } from '@ant-design/icons'\nimport { Tooltip } from 'antd'\nimport { useTranslation } from 'react-i18next'\n\nimport { TableUtil } from '../utils/table'\n\nconst ToolBar = () => {\n  const { t } = useTranslation()\n  const editor = useSlate()\n\n  const table = new TableUtil(editor)\n\n  const handleButtonClick = (e, action) => {\n    e.preventDefault()\n    table.edit(action)\n  }\n\n  return (\n    <div className=\"mb-2 space-x-2 bg-white inline-flex px-3 py-1 rounded-md shadow-sm\">\n      <Tooltip title={t('insert row above')} arrowPointAtCenter placement=\"topLeft\">\n        <InsertRowAboveOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'insert-row-above')} />\n      </Tooltip>\n      <Tooltip title={t('insert row below')} arrowPointAtCenter placement=\"topLeft\">\n        <InsertRowBelowOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'insert-row-below')} />\n      </Tooltip>\n      <Tooltip title={t('delete row')} arrowPointAtCenter placement=\"topLeft\">\n        <DeleteRowOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'delete-row')} />\n      </Tooltip>\n\n      <div className=\"border-l border-gray-300\"></div>\n\n      <Tooltip title={t('insert column before')} arrowPointAtCenter placement=\"topLeft\">\n        <InsertRowLeftOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'insert-column-above')} />\n      </Tooltip>\n      <Tooltip title={t('insert column after')} arrowPointAtCenter placement=\"topLeft\">\n        <InsertRowRightOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'insert-column-below')} />\n      </Tooltip>\n      <Tooltip title={t('delete column')} arrowPointAtCenter placement=\"topLeft\">\n        <DeleteColumnOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'delete-column')} />\n      </Tooltip>\n\n    </div>\n  )\n}\n\nexport default ToolBar\n","import { useState, useMemo, useCallback, useImperativeHandle, forwardRef } from 'react'\nimport { createEditor } from 'slate'\nimport { Slate, Editable, withReact, ReactEditor } from 'slate-react'\n\nimport withTables from '../utils/withTable.js'\nimport ToolBar from '../components/ToolBar'\nimport { stringToSlateValue } from '../utils/util.js'\nimport { TableUtil } from '../utils/table'\nimport { DEFAULT_TABLE } from '../utils/contants'\n\nconst Element = props => {\n  const { attributes, children, element } = props\n  switch (element.type) {\n    case 'table':\n      return (<table>\n        <tbody {...attributes}>{children}</tbody>\n      </table>)\n    case 'table-row':\n      return <tr {...attributes}>{children}</tr>\n    case 'table-cell':\n      return <td {...attributes}>{children}</td>\n    default:\n      return <p {...attributes}>{children}</p>\n  }\n}\n\nconst TableEditor = ({ content = DEFAULT_TABLE, className = '' }, ref) => {\n  // const [value, setValue] = useState([\n  //   // {\n  //   //   type: 'paragaph',\n  //   //   children: [{ text: 'First line of text in Slate JS. ' }],\n  //   // },\n    // {\n    //   type: 'table',\n    //   children: [\n    //     {\n    //       type: 'table-row',\n    //       children: [\n    //         {\n    //           type: 'table-cell',\n    //           children: [\n    //             {\n    //               text: 'title1',\n    //             }\n    //           ]\n    //         },\n    //         {\n    //           type: 'table-cell',\n    //           children: [\n    //             {\n    //               text: 'title2',\n    //             }\n    //           ]\n    //         },\n    //       ]\n    //     },\n    //     {\n    //       type: 'table-row',\n    //       children: [\n    //         {\n    //           type: 'table-cell',\n    //           children: [\n    //             {\n    //               text: 'content1',\n    //             }\n    //           ]\n    //         },\n    //         {\n    //           type: 'table-cell',\n    //           children: [\n    //             {\n    //               text: 'content2',\n    //             }\n    //           ]\n    //         },\n    //       ]\n    //     },\n    //   ]\n    // }\n  // ])\n  // console.log('[faiz:] === tableEditor input: \\n', content)\n  const [value, setValue] = useState([stringToSlateValue(content)])\n  // console.log('[faiz:] === tableEditor format to Slate Editor Node: ', stringToSlateValue(content))\n\n  const editor = useMemo(() => withTables(withReact(createEditor())), [])\n  const tableUtil = useMemo(() => new TableUtil(editor), [editor])\n  const renderElement = useCallback(props => <Element {...props} />, [])\n\n  const onKeyDown = event => {\n    // https://docs.slatejs.org/libraries/slate-react#editable\n    if (event.key === 'Enter' && event.shiftKey) {\n      editor.insertText('\\n')\n      return false\n    }\n  }\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      getEditorValue: () => value,\n      onKeydown: (code) => {\n        const isFocused = ReactEditor.isFocused(editor)\n        if (!isFocused) return\n        if (code === 'Tab') {\n          tableUtil.edit('cursor-next')\n        } else if (code === 'ShiftTab') {\n          tableUtil.edit('cursor-prev')\n        }\n      },\n    }),\n    [value, editor, tableUtil]\n  )\n\n  return (\n    <div className={className}>\n      <Slate\n        editor={editor}\n        value={value}\n        onChange={setValue}\n      >\n        <ToolBar />\n        <Editable\n          placeholder='Write something'\n          renderElement={renderElement}\n          onKeyDown={onKeyDown}\n        />\n      </Slate>\n    </div>\n  )\n}\n\nexport default forwardRef(TableEditor)","import { useRef, useState, useEffect, useCallback } from 'react'\nimport { Button } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\n\nimport TableEditor from '../components/TableEditor'\nimport { slateValueToString } from '../utils/util'\nimport { tableLineReg, DEFAULT_TABLE } from '../utils/contants'\nimport './App.css'\nimport { useTranslation } from 'react-i18next'\n\nconst logseq = window.logseq\nconst logseqApp = logseq.App\nconst logseqEditor = logseq.Editor\n\nconst isInBrowser = process.env.REACT_APP_ENV === 'browser'\n\nconst App = ({ content, tables, blockId }) => {\n  const { t } = useTranslation()\n\n  const tableEditorMapRef = useRef({})\n  const [arrAfterSplitByTable, setArrAfterSplitByTable] = useState([])\n\n  const setTableEditorRef = (index, dom) => {\n    tableEditorMapRef.current = {\n      ...tableEditorMapRef.current,\n      [index]: dom,\n    }\n  }\n\n  const onClickConfirm = () => {\n    if (!blockId && !isInBrowser) return logseqApp.UI.showMsg(t('uuid error'))\n    const markdownContent = arrAfterSplitByTable.map((node, index) => {\n      if (node.type === 'table') {\n        const slateVal = tableEditorMapRef.current?.[index]?.getEditorValue()?.[0]\n        console.log('[faiz:] === slateVal', slateVal)\n        return slateValueToString(slateVal)\n      }\n      return node.str\n    }).join('\\n')\n    if (isInBrowser) return console.log('[faiz:] === save content:\\n', markdownContent, '\\nblockId:', blockId)\n\n    logseqEditor.updateBlock(blockId, markdownContent)\n      .then(() => {\n        logseqApp.UI.showMsg(t('markdown table overwrite success'))\n        logseq.hideMainUI()\n      })\n      .catch(err => {\n        logseqApp.UI.showMsg(t('markdown table overwrite error'), 'warning')\n        console.log('[faiz:] === onClickConfirm error', err)\n      })\n  }\n  const onClickCancel = () => logseq.hideMainUI()\n  const onClickAdd = () => {\n    setArrAfterSplitByTable(_arr => {\n      if (_arr.find(node => node.type === 'table')) {\n        // spreate table by empty line\n        return _arr.concat([\n          {\n            type: 'notTable',\n            str: '',\n          },\n          { type: 'table', str: DEFAULT_TABLE }\n        ])\n      }\n      return _arr.concat({ type: 'table', str: DEFAULT_TABLE })\n    })\n  }\n  const onKeydown = useCallback(e => {\n    if (e.code === 'Tab' && e.shiftKey === false) {\n      e.preventDefault()\n      Object.keys(tableEditorMapRef.current).forEach(key => {\n        tableEditorMapRef.current?.[key]?.onKeydown('Tab')\n      })\n    } else if (e.code === 'Tab' && e.shiftKey) {\n      e.preventDefault()\n      Object.keys(tableEditorMapRef.current).forEach(key => {\n        tableEditorMapRef.current?.[key]?.onKeydown('ShiftTab')\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    const arr = splitStrByTable(content, tables)\n    setArrAfterSplitByTable(arr)\n    console.log('[faiz:] === arrAfterSplitByTable', arr)\n  }, [content, tables])\n  useEffect(() => {\n    window.addEventListener('keydown', onKeydown)\n    return () => {\n      window.removeEventListener('keydown', onKeydown)\n    }\n  }, [onKeydown])\n\n  return (\n    <div className=\"w-screen h-screen flex flex-col justify-center items-center\">\n      <div className=\"w-screen h-screen absolute\" style={{ background: 'rgba(0, 0, 0, .3)', zIndex: -1 }} onClick={onClickCancel}></div>\n      <div className=\"w-2/3 overflow-y-auto\" style={{ maxHeight: '80%' }}>\n        <div className=\"mt-2 flex flex-col\">\n          {\n            arrAfterSplitByTable?.map((node, index) => {\n              return node?.type === 'table'\n                ? (<TableEditor className=\"my-2\" content={node?.str} key={index} ref={dom => setTableEditorRef(index, dom)} />)\n                : (<div className=\"bg-gray-400 text-gray-300 my-3 rounded px-1 py-2\" key={index} style={{ whiteSpace: 'pre-line' }}>{node.str}</div>)\n            })\n          }\n        </div>\n      </div>\n      <Button ghost className=\"rounded mt-2 flex items-center\" icon={<PlusOutlined />} onClick={onClickAdd}>{t('Add New Table')}</Button>\n      <div className=\"flex w-2/3 flex-row justify-end mt-4\">\n        <Button className=\"mr-1 rounded\" onClick={onClickCancel}>{t('Cancel')}</Button>\n        <Button className=\"rounded\" type=\"primary\" onClick={onClickConfirm}>{t('Confirm')}</Button>\n      </div>\n    </div>\n  )\n}\n\nconst genTable = (arr, startLine, endLine) => {\n  return arr\n    .slice(startLine, endLine)\n    // 暂行逻辑，看是否可以优化： 无空行隔开的两个table，认为是一个 table，且过滤掉不符合 table 语法的内容\n    .filter(str => tableLineReg.test(str))\n    .join('\\n')\n}\nconst splitStrByTable = (str, tables = []) => {\n  const strToArr = str.split('\\n')\n  let strArrByTable = []\n\n  tables.forEach((table, index, arr) => {\n    const [startLine, endLine] = table\n    const preEndLine = index === 0 ? 0 : arr[index - 1][1]\n\n    if (startLine === preEndLine) {\n      strArrByTable.push({\n        str: genTable(strToArr, startLine, endLine),\n        type: 'table',\n      })\n    } else {\n      strArrByTable.push({\n        str: strToArr.slice(preEndLine, startLine).join('\\n'),\n        type: 'notTable',\n      })\n      strArrByTable.push({\n        // str: strToArr.slice(startLine, endLine).join('\\n'),\n        str: genTable(strToArr, startLine, endLine),\n        type: 'table',\n      })\n    }\n\n  })\n\n  const [/*lastTableStartLine*/, lastTableEndLine] = tables[tables.length - 1]\n  if (strToArr.length - 1 >= lastTableEndLine) {\n    strArrByTable.push({\n      str: strToArr.slice(lastTableEndLine).join('\\n'),\n      type: 'notTable'\n    })\n  }\n\n  return strArrByTable\n}\nexport default App","import MarkdownIt from \"markdown-it\"\n\nimport { tableLineReg, DEFAULT_TABLE } from \"./contants\"\n\nconst md = new MarkdownIt()\n\nconst parseMarkdownTable = (input) => {\n  const strArr = input.split('\\n')\n  // token https://github.com/markdown-it/markdown-it/blob/master/lib/token.js\n  const tokenList = md.parse(input, {})\n\n  const tables = tokenList\n    .filter(token => token?.type === 'table_open')\n    .map(token => {\n      // map is Sourse map, format [startLine, endLine]\n      let [startLine , endLine] = token.map\n      const endLineStr = strArr[endLine]\n\n      if (tableLineReg.test(endLineStr)) return token.map\n\n      // fix markdown-it table must have a newLine after\n      let trueEndLine = -1\n      while (endLine > startLine) {\n        if (tableLineReg.test(strArr[endLine])) {\n          trueEndLine = endLine\n          break\n        }\n        endLine--\n      }\n      return [startLine, trueEndLine + 1]\n    })\n  \n  if (tables?.length === 0) {\n    console.warn('[faiz:] === No Table Found')\n    input += `${input === '' ? '' : '\\n'}${DEFAULT_TABLE}`\n    return parseMarkdownTable(input)\n  }\n\n  return tables\n}\n\nexport default parseMarkdownTable","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport translationEN from \"./en/translation.json\";\nimport translationZhCN from \"./zh-CN/translation.json\";\n\nconst resources = {\n  en: {\n    translation: translationEN,\n  },\n  'zh-CN': {\n    translation: translationZhCN,\n  },\n};\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: \"en\",\n  fallbackLng: \"en\",\n  interpolation: {\n    escapeValue: false,\n  },\n});\n\nexport default i18n;\n","import '@logseq/libs'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\n\nimport App from './pages/App'\nimport parseMarkdownTable from './utils/parseRawInputByMarkdownIt'\n// import { multipleTables, empty, longTables, onlyText, tableWithTextBeforeAndAfter } from './utils/testExample'\nimport { longTables } from './utils/testExample'\nimport i18n from './locales/i18n'\nimport './index.css'\n\nconst logseq = window.logseq\nconst logseqEditor = logseq.Editor\nconst logseqApp = logseq.App\n\nconst isInBrowser = process.env.REACT_APP_ENV === 'browser'\nconst bootEditor = (input, blockId) => {\n  console.log('[faiz:] === Raw Input: \\n', input)\n  let tables = parseMarkdownTable(input)\n  console.log('[faiz:] === markdownIt parse res', tables)\n  renderApp(input, tables, blockId)\n}\nif (isInBrowser) {\n  bootEditor(longTables, 111)\n} else {\n  logseq.ready().then(() => {\n    logseq.App.getUserConfigs().then(configs => {\n      i18n.changeLanguage(configs.preferredLanguage || 'en')\n      // padding-left: var(--ls-left-sidebar-width);\n      logseq.provideStyle(`\n        iframe#logseq-markdown-table.lsp-iframe-sandbox {\n          z-index: 10;\n        }\n      `)\n      console.log('[faiz:] === markdown-table-editor-plugin loaded')\n      const commandCallback = (e) => {\n        console.log('[faiz:] === woz-markdown-table-editor', e)\n        logseqEditor.getBlock(e.uuid).then(block => {\n          console.log('[faiz:] === block', block)\n          const { format, content } = block\n          // only support markdown\n          if (format !== 'markdown') return logseqApp.UI.showMsg(i18n.t('Markdown table editor only support markdown'), 'warning')\n\n          bootEditor(content, e.uuid)\n\n          // for empty block\n          // todo: fix\n          // if (content === '') return renderApp(DEFAULT_TABLE, [], e.uuid)\n\n          // const tables = parseMarkdownTable(content)\n          // if (tables?.length > 0) {\n          //   // const [startLine, endLine] = tables[0]\n          //   // const firstTable = content.split('\\n').slice(startLine, endLine).join('\\n')\n          //   // console.log('[faiz:] === firstTable', content, firstTable, startLine, endLine)\n          //   // return renderApp(firstTable, e.uuid)\n          //   return renderApp(content, tables, e.uuid)\n          // }\n\n          // const renderHtml = md.render(content)\n          // if (renderHtml.startsWith('<table>') && (renderHtml.endsWith('</table>') || renderHtml.endsWith('</table>\\n'))) {\n          //   return renderApp(content || DEFAULT_TABLE, e.uuid)\n          // }\n          // format to table error\n          // window.logseq.App.showMsg('Sorry, block content format to markdown table error', 'warning')\n          // console.log('[faiz:] === block content format to markdown table error')\n        })\n      }\n      logseqEditor.registerBlockContextMenuItem(i18n.t('Markdown Table Editor'), commandCallback)\n      logseqEditor.registerSlashCommand('Markdown Table Editor', commandCallback)\n\n      logseq.on('ui:visible:changed', (e) => {\n        if (!e.visible) {\n          ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n        }\n      });\n    })\n  })\n}\n\nfunction renderApp(content, tables, blockId) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App content={content} tables={tables} blockId={blockId} />\n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n  if (!isInBrowser) logseq.showMainUI()\n}\n","export const empty = ''\n\nexport const onlyText = 'normal text\\nnor'\n\nexport const onlyOneTable = '|title1|title2|\\n|--|--|\\n|content1|content2|'\n\nexport const tableWithTextBefore = 'foo\\n`yarn install`\\n|title1|title2|\\n|--|--|\\n|content1|content2|'\n\nexport const tableWithTextBeforeAndAfter = 'foo\\n`yarn install`\\n|title1|title2|\\n|--|--|\\n|content1|content2|\\n**bold**\\nother'\n\nexport const multipleTables = 'foo\\n`yarn install`\\n|title1|title2|\\n|--|--|\\n|content1|content2|\\n|**bold**|\\nother\\n\\n|table2|table2|\\n|--|--|\\n|contentB|contentB|\\ntest text'\n\nexport const longTables = 'foo\\n`yarn install`\\n|title1[:br]new line|title2|\\n|--|--|\\n|content1|content2|\\n\\n**bold**\\nother\\n\\n|table2|table2|\\n|--|--|\\n|contentB|contentB|\\n\\n|table2|table2|\\n|--|--|\\n|contentB|contentB|\\n|contentB|contentB|\\n|contentB|contentB|\\n|contentB|contentB|'"],"sourceRoot":""}