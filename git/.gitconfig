[user]
	useconfigonly = true
[rerere]
  enabled = 1
[alias]
  st = status
  ci = commit
  br = branch
  co = checkout
  df = diff
  lg = log -p
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  changes=diff --name-status -r
  diffstat=diff --stat -r
  upstream = log --oneline master --not origin/master
  pending = log --oneline origin/master --not master
  myworklog = log --author=prskavecl --since=1.month --pretty='%h %Cgreen%ad %Cred%an %Cblue%s%Creset'
  worklog = log --pretty='%h %Cgreen%ad %Cred%an %Cblue%s%Creset'
  worklogexport = log --pretty='%h|%at|%an|%s'
  up = pull --rebase
  wu = log --stat origin..@{0}
  wup = log -p origin..@{0}
  showtrackedignored = ls-files -i --exclude-standard
  cif = !git commit --fixup=$(git-log-vgrep-most-recent-commit 'fixup!')
  rbi = rebase -i --autosquash
  start = !git init && git commit --allow-empty -m \"Initial commit\"
[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[core]
	excludesfile = /Users/abtris/.gitignore
  quotepath = false
  autocrlf=input
	trustctime = false
	pager = diff-so-fancy | less --tabs=1,5 -R
	editor = atom --wait
[instaweb]
  httpd=webrick
[url "git@github.com:abtris/"]
  insteadOf = "gh:"
[url "ssh://git@git.int.lmc.cz/"]
  insteadOf = "lmc:"
[push]
	default = simple
[github]
  user = abtris
[browser "gitscm"]
  cmd = /bin/sh -c 'open http://git-scm.com/docs/$(basename $1 .html)' --
[help]
  browser = gitscm
[branch]
  autosetuprebase = always
[difftool "kdiff3"]
  path = /usr/local/bin/kdiff3
  trustExitCode = false
[difftool]
  prompt = false
[diff]
  tool = kdiff3
	compactionHeuristic = true
[mergetool "kdiff3"]
  path = /usr/local/bin/kdiff3
  trustExitCode = false
[mergetool]
  keepBackup = false
[merge]
	tool = vimdiff
	conflictstyle = diff3
[diff "word"]
  binary = true
  textconv = strings
[diff "odt"]
  binary = true
  textconv = ~/bin/dotfiles/bin/odt-to-txt
[init]
	templatedir = ~/.gittemplate
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true
[gc]
	auto = 0
[commit]
	gpgsign = true
